@page "/View"
@using FamilyWeb1.Data
@using Models
@inject IAdultService CloudService


<h3>AdultView</h3>

<p>Filter by ID: <input type="number" @oninput="@((arg) => FilterById(arg))" style="width:50px"/>
    </p>

@if (adultsToShow == null) {
    <p>
        <em>Loading...</em>
    </p>
} else if (!adultsToShow.Any()) {
    <p>
        <em>No family items exist. Please add some.</em>
    </p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>ID</th>
            <th>First Name</th>
            <th>Last Name</th>
            <th>HairColor</th>
            <th>EyeColor</th>
            <th>Age</th>
            <th>Weight</th>
            <th>Height</th>
            <th>Sex</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var adults in adultsToShow)
        {
            <tr>
                <td>@adults.id</td>
                <td>@adults.firstName</td>
                <td>@adults.lastName</td>
                <td>@adults.hairColor</td>
                <td>@adults.eyeColor</td>
                <td>@adults.age</td>
                <td>@adults.weight</td>
                <td>@adults.height</td>
                <td>@adults.sex</td>
                <td>@adults.JobTitle</td>
                
            </tr>
        }
        </tbody>
    </table>

}


@code {
    private IList<Adult> adultsToShow;
    private IList<Adult> allAdults;

    private int? filterById;
    
    private void FilterById(ChangeEventArgs changeEventArgs)
    {
        filterById = null;
        try
        {
            filterById = int.Parse(changeEventArgs.Value.ToString());
        }
        catch
        {
            adultsToShow = allAdults;
        }

        if (filterById != null)
        {
            ExcecuteFilterById();
        }
    }

    private void ExcecuteFilterById()
    {
        adultsToShow = allAdults.Where(t => filterById != null && t.id == filterById || filterById == null).ToList();
    }
    
    protected override async Task OnInitializedAsync()
    {
        allAdults = await CloudService.GetAdultsAsync();
        adultsToShow = allAdults;
    }


}